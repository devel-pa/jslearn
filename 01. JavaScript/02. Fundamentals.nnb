{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Fundamentals\n\n"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Variables"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "{\n    var var1 = 33;\n    let let1 = 44;\n    const const1 = 55;\n    const1 = 66;\n}"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.error",
                            "value": {
                                "name": "TypeError",
                                "message": "Assignment to constant variable.",
                                "stack": "    at <Cell 3> [5, 10]\n    at <Cell 3> [9, 46]\n    at Script.runInContext (node:vm:139:12)\n    at Script.runInNewContext (node:vm:144:17)\n    at Object.runInNewContext (node:vm:298:38)\n    at C (/Users/Paul.Apostol/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/server/index.js:2:113345)\n    at t.execCode (/Users/Paul.Apostol/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/server/index.js:2:114312)\n    at k.<anonymous> (/Users/Paul.Apostol/.vscode/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/server/index.js:2:142156)\n    at k.emit (node:events:390:28)\n    at k.emit (node:domain:475:12)"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "## Data types"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Type conversion"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Basic operators, maths"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Comparisons"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Conditional branching\n\n`if` and `?`"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Logical operators"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Nullish coalescence `??`"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Loops: `while` and `for`"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## `switch` statement"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Functions"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Function expressions"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "## Arrow functions basics"
            ],
            "outputs": []
        }
    ]
}